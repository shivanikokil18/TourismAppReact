{"ast":null,"code":"import { places } from '../Server/db.json';\nimport { ResponseChk, ErrorChk } from \"./chkApi\";\nlet url = process.env.REACT_APP_API_URL + \"/places/\";\nexport function getPlace() {\n  return fetch(url).then(ResponseChk).catch(ErrorChk);\n}\nexport function getPlacebySlug(slug) {\n  return fetch(url + \"?slug=\" + slug).then(response => {\n    if (!response.ok) throw new Error(\"Place by slug cannot be retrieved ..error\");\n    return response.json().then(places => {\n      if (places.length !== 1) throw new Error(\"Cannot find the place..\" + slug);\n      return places[0];\n    });\n  }).catch(ErrorChk);\n}\nexport function savePlace(place) {\n  return fetch(url + (place.id || \"\"), {\n    method: place.id ? \"PUT\" : \"POST\",\n    headers: {\n      \"content-type\": \"application/json\"\n    },\n    body: JSON.stringify({ ...place\n    })\n  }).then(ResponseChk).catch(ErrorChk);\n}\nexport function deletePlace(placeId) {\n  return fetch(url + placeId, {\n    method: \"DELETE\"\n  }).then(ResponseChk).catch(ErrorChk);\n}","map":{"version":3,"sources":["/Users/shivani.kokil/Documents/React/reactdemo/src/apicalls/placeApi.js"],"names":["places","ResponseChk","ErrorChk","url","process","env","REACT_APP_API_URL","getPlace","fetch","then","catch","getPlacebySlug","slug","response","ok","Error","json","length","savePlace","place","id","method","headers","body","JSON","stringify","deletePlace","placeId"],"mappings":"AAAA,SAAQA,MAAR,QAAqB,mBAArB;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,UAAtC;AACA,IAAIC,GAAG,GAAGC,OAAO,CAACC,GAAR,CAAYC,iBAAZ,GAAgC,UAA1C;AAEA,OAAO,SAASC,QAAT,GAAmB;AACtB,SAAOC,KAAK,CAACL,GAAD,CAAL,CAAWM,IAAX,CAAgBR,WAAhB,EAA6BS,KAA7B,CAAmCR,QAAnC,CAAP;AACH;AAED,OAAO,SAASS,cAAT,CAAwBC,IAAxB,EAA8B;AACjC,SAAOJ,KAAK,CAACL,GAAG,GAAG,QAAN,GAAiBS,IAAlB,CAAL,CACJH,IADI,CACEI,QAAD,IAAc;AAClB,QAAI,CAACA,QAAQ,CAACC,EAAd,EACE,MAAM,IAAIC,KAAJ,CAAU,2CAAV,CAAN;AACF,WAAOF,QAAQ,CAACG,IAAT,GAAgBP,IAAhB,CAAsBT,MAAD,IAAY;AACtC,UAAIA,MAAM,CAACiB,MAAP,KAAkB,CAAtB,EACE,MAAM,IAAIF,KAAJ,CAAU,4BAA4BH,IAAtC,CAAN;AACF,aAAOZ,MAAM,CAAC,CAAD,CAAb;AACD,KAJM,CAAP;AAKD,GATI,EAUJU,KAVI,CAUER,QAVF,CAAP;AAWD;AAED,OAAO,SAASgB,SAAT,CAAmBC,KAAnB,EAA0B;AAC/B,SAAOX,KAAK,CAACL,GAAG,IAAIgB,KAAK,CAACC,EAAN,IAAY,EAAhB,CAAJ,EAAyB;AACnCC,IAAAA,MAAM,EAAEF,KAAK,CAACC,EAAN,GAAW,KAAX,GAAmB,MADQ;AAEnCE,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAF0B;AAGnCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe,EACnB,GAAGN;AADgB,KAAf;AAH6B,GAAzB,CAAL,CAOJV,IAPI,CAOCR,WAPD,EAQJS,KARI,CAQER,QARF,CAAP;AASD;AAED,OAAO,SAASwB,WAAT,CAAqBC,OAArB,EAA8B;AACnC,SAAOnB,KAAK,CAACL,GAAG,GAAGwB,OAAP,EAAgB;AAC1BN,IAAAA,MAAM,EAAE;AADkB,GAAhB,CAAL,CAGJZ,IAHI,CAGCR,WAHD,EAIJS,KAJI,CAIER,QAJF,CAAP;AAKD","sourcesContent":["import {places} from '../Server/db.json'\nimport { ResponseChk, ErrorChk } from \"./chkApi\";\nlet url = process.env.REACT_APP_API_URL + \"/places/\";\n\nexport function getPlace(){\n    return fetch(url).then(ResponseChk).catch(ErrorChk);\n}\n\nexport function getPlacebySlug(slug) {\n    return fetch(url + \"?slug=\" + slug)\n      .then((response) => {\n        if (!response.ok)\n          throw new Error(\"Place by slug cannot be retrieved ..error\");\n        return response.json().then((places) => {\n          if (places.length !== 1)\n            throw new Error(\"Cannot find the place..\" + slug);\n          return places[0];\n        });\n      })\n      .catch(ErrorChk);\n  }\n  \n  export function savePlace(place) {\n    return fetch(url + (place.id || \"\"), {\n      method: place.id ? \"PUT\" : \"POST\",\n      headers: { \"content-type\": \"application/json\" },\n      body: JSON.stringify({\n        ...place,\n      }),\n    })\n      .then(ResponseChk)\n      .catch(ErrorChk);\n  }\n  \n  export function deletePlace(placeId) {\n    return fetch(url + placeId, {\n      method: \"DELETE\",\n    })\n      .then(ResponseChk)\n      .catch(ErrorChk);\n  }\n  \n\n\n\n"]},"metadata":{},"sourceType":"module"}