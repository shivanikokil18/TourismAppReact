{"ast":null,"code":"var _jsxFileName = \"/Users/shivani.kokil/Documents/React/reactdemo/src/Places/Details.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport DeletePlace from \"../Places/DeletePlace\";\nimport * as placeApi from '../apicalls/placeApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Details = props => {\n  _s();\n\n  const [errors, setErrors] = useState({});\n  const [place, setPlace] = useState({\n    id: null,\n    title: \"\",\n    ptofattraction: \"\"\n  });\n  const [saving, setSave] = useState(false);\n  useEffect(() => {\n    const slug = props.match.params.slug;\n\n    if (slug) {\n      placeApi.getPlacebySlug(slug).then(_place => setPlace(_place));\n    }\n  }, []);\n\n  function ValidForm(params) {\n    const _errors = {};\n    if (!place.title) _errors.title = \"Please enter the place title\";\n    if (!place.ptofattraction) _errors.ptofattraction = \"Please enter the point of attraction\";\n    setErrors(_errors);\n    return Object.keys(_errors).length === 0;\n  }\n\n  function handleChange({\n    target\n  }) {\n    setPlace({ ...place,\n      [target.name]: target.value\n    });\n  }\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    if (!ValidForm()) return;\n    setSave(true);\n    placeApi.savePlace(place).then(() => {\n      props.history.push(\"/places\");\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(DeletePlace, {\n      errors: errors,\n      place: place,\n      onChange: handleChange,\n      onDelete: handleDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Details, \"f7fALPn45VLeugw+UfC46kyMRsM=\");\n\n_c = Details;\nexport default Details;\n\nvar _c;\n\n$RefreshReg$(_c, \"Details\");","map":{"version":3,"sources":["/Users/shivani.kokil/Documents/React/reactdemo/src/Places/Details.js"],"names":["React","useEffect","useState","DeletePlace","placeApi","Details","props","errors","setErrors","place","setPlace","id","title","ptofattraction","saving","setSave","slug","match","params","getPlacebySlug","then","_place","ValidForm","_errors","Object","keys","length","handleChange","target","name","value","handleSubmit","evt","preventDefault","savePlace","history","push","handleDelete"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAO,KAAKC,QAAZ,MAA0B,sBAA1B;;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AACzB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC;AACjCS,IAAAA,EAAE,EAAE,IAD6B;AAEjCC,IAAAA,KAAK,EAAE,EAF0B;AAGjCC,IAAAA,cAAc,EAAE;AAHiB,GAAD,CAAlC;AAKA,QAAM,CAACC,MAAD,EAASC,OAAT,IAAoBb,QAAQ,CAAC,KAAD,CAAlC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMe,IAAI,GAAGV,KAAK,CAACW,KAAN,CAAYC,MAAZ,CAAmBF,IAAhC;;AACA,QAAIA,IAAJ,EAAU;AACRZ,MAAAA,QAAQ,CAACe,cAAT,CAAwBH,IAAxB,EAA8BI,IAA9B,CAAoCC,MAAD,IAAYX,QAAQ,CAACW,MAAD,CAAvD;AACD;AACF,GALQ,EAKN,EALM,CAAT;;AAMA,WAASC,SAAT,CAAmBJ,MAAnB,EAA2B;AACzB,UAAMK,OAAO,GAAG,EAAhB;AACA,QAAI,CAACd,KAAK,CAACG,KAAX,EAAkBW,OAAO,CAACX,KAAR,GAAgB,8BAAhB;AAClB,QAAI,CAACH,KAAK,CAACI,cAAX,EAA2BU,OAAO,CAACV,cAAR,GAAyB,sCAAzB;AAC3BL,IAAAA,SAAS,CAACe,OAAD,CAAT;AACA,WAAOC,MAAM,CAACC,IAAP,CAAYF,OAAZ,EAAqBG,MAArB,KAAgC,CAAvC;AACD;;AACH,WAASC,YAAT,CAAsB;AAAEC,IAAAA;AAAF,GAAtB,EAAkC;AAC9BlB,IAAAA,QAAQ,CAAC,EACP,GAAGD,KADI;AAEP,OAACmB,MAAM,CAACC,IAAR,GAAeD,MAAM,CAACE;AAFf,KAAD,CAAR;AAID;;AACH,WAASC,YAAT,CAAsBC,GAAtB,EAA2B;AACvBA,IAAAA,GAAG,CAACC,cAAJ;AACA,QAAI,CAACX,SAAS,EAAd,EAAkB;AAClBP,IAAAA,OAAO,CAAC,IAAD,CAAP;AACAX,IAAAA,QAAQ,CAAC8B,SAAT,CAAmBzB,KAAnB,EAA0BW,IAA1B,CAA+B,MAAM;AACnCd,MAAAA,KAAK,CAAC6B,OAAN,CAAcC,IAAd,CAAmB,SAAnB;AACD,KAFD;AAGD;;AACD,sBACE;AAAA,2BAME,QAAC,WAAD;AACE,MAAA,MAAM,EAAE7B,MADV;AAEE,MAAA,KAAK,EAAEE,KAFT;AAGE,MAAA,QAAQ,EAAEkB,YAHZ;AAIE,MAAA,QAAQ,EAAEU;AAJZ;AAAA;AAAA;AAAA;AAAA;AANF,mBADF;AAeD,CAlDD;;GAAMhC,O;;KAAAA,O;AAoDN,eAAeA,OAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport DeletePlace from \"../Places/DeletePlace\";\nimport * as placeApi from '../apicalls/placeApi';\n\nconst Details = (props) => {\n  const [errors, setErrors] = useState({});\n  const [place, setPlace] = useState({\n    id: null,\n    title: \"\",\n    ptofattraction: \"\",\n  });\n  const [saving, setSave] = useState(false); \n  useEffect(() => {\n    const slug = props.match.params.slug;\n    if (slug) {\n      placeApi.getPlacebySlug(slug).then((_place) => setPlace(_place));\n    }\n  }, []); \n  function ValidForm(params) {\n    const _errors = {};\n    if (!place.title) _errors.title = \"Please enter the place title\";\n    if (!place.ptofattraction) _errors.ptofattraction = \"Please enter the point of attraction\";\n    setErrors(_errors);\n    return Object.keys(_errors).length === 0;\n  }\nfunction handleChange({ target }) {\n    setPlace({\n      ...place,\n      [target.name]: target.value,\n    });\n  }\nfunction handleSubmit(evt) {\n    evt.preventDefault();\n    if (!ValidForm()) return;\n    setSave(true);\n    placeApi.savePlace(place).then(() => {\n      props.history.push(\"/places\");\n    });\n  }\n  return (\n    <>\n      {/* <h2>{place.title}</h2>\n      <p>{room.charge}</p>\n      <p>{room.availability}</p>\n      <p>{room.slug}</p> */}\n    \n      <DeletePlace\n        errors={errors}\n        place={place}\n        onChange={handleChange}\n        onDelete={handleDelete}\n      />\n    </>\n  );\n};\n\nexport default Details;"]},"metadata":{},"sourceType":"module"}